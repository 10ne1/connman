Device hierarchy
================

Service		org.moblin.connman
Interface	org.moblin.connman.Device
Object path	[variable prefix]/{device0,device1,...}

Methods		dict GetProperties()

			Returns properties for the device object. See
			the properties section for available properties.

			Possible Errors: [service].Error.InvalidArguments

		void SetProperty(string name, variant value)

			Changes the value of the specified property. Only
			properties that are listed as read-write are
			changeable. On success a PropertyChanged signal
			will be emitted.

			Possible Errors: [service].Error.InvalidArguments
					 [service].Error.DoesNotExist

		object CreateNetwork(dict network)

			Creates a network object from the specified
			properties. Valid properties are WiFi.SSID,
			WiFi.Security and WiFi.Passphrase. Check the
			network interface description for details.

			Possible Errors: [service].Error.InvalidArguments

		void RemoveNetwork(object network)

			Removes a previously created network object.

			Possible Errors: [service].Error.InvalidArguments
					 [service].Error.DoesNotExist

Signals		PropertyChanged(string name, variant value)

			This signal indicates a changed value of the given
			property.

Properties	string Name [readonly]

			The device name (for example "Wireless" etc.)

			This name can be used for directly displaying it in
			the application. It has pure informational purpose.

		string Type [readonly]

			The device type (for example "ethernet", "wifi" etc.)

		string Policy [readwrite]

			Setting of the device power policy. Possible values
			are "off", "ignore" and "auto".

			The policy defines on how the device is initialized
			when brought up. The actual device power state can
			be changed independently to this value.

			If a device is switched off and the policy is changed
			to "auto", the device will be switched. For a current
			active device changing the policy to "off" results
			in powering down the device.

			The "ignore" policy can be set for devices that are
			detected, but managed by a different entity on the
			system. For example complex network setups.

		boolean Powered [readwrite]

			Switch a device on or off. This will also modify
			the list of networks in range. All known networks
			will be still available via the Networks property.

			Changing this value doesn't change the value of the
			Policy property.

			The value of this property can be changed by other
			parts of the system (including the kernel). An
			example would be modifications via the "ifconfig"
			command line utility.

		boolean Scanning [readonly]

			Indicates if a device is scanning. Not all device
			types might support this. Also some hardware might
			execute background scanning without notifying the
			driver about it. Use this property only for visual
			indication.

		array{object} Networks [readonly]

			List of networks objects paths. Every object path
			represents a network in range or a known network.
